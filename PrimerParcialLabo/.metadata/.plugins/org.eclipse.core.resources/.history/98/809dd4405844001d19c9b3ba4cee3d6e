/*
 * funciones.h
 *
 *  Created on: 1 oct. 2022
 *      Author: manu
 */

#ifndef FUNCIONES_H_
#define FUNCIONES_H_

#include "libro.h"
#include "autor.h"
#include "editorial.h"


/// @param precio Le paso la variable precio puntero para que reciba el valor del importe cargado
/// @param mensaje Le paso el mensaje solicitando al usuario que cargue el importe
/// @param mensajeError Le paso el mensaje de eror en caso de que haya ingresado un caracter no valido
void CargarPrecio(float *precio, char mensaje[], char mensajeError[]);



/// @param libro Le paso el array de estructuras de tipo eLibro
/// @param autores Le paso el array de estructuras de tipo eAutor
/// @param editoriales Le paso el array de estructuras de tipo eEditorial
/// @param tamL Le paso el tamanio del array libros
/// @param tamA Le paso el tamanio del array autores
/// @param paises Le paso el array de estructuras de tipo ePaises
/// @param tamP Le paso el tamanio del array paises
/// @return retorna 1 si se hizo correctamente
int MostrarUnLibro(eLibro libro, eAutor autores[],eEditorial editoriales[], int tamL, int tamA,ePais paises[],int tamP);


/// @param libros Le paso el array de estructuras de tipo eLibro
/// @param tamL Le paso el tamanio del array libros
/// @param autores Le paso el array de estructuras de tipo eAutor
/// @param tamA Le paso el tamanio del array autores
/// @param editoriales Le paso el array de estructuras de tipo eEditorial
/// @param tamE Le paso el tamanio del array editoriales
/// @param paises Le paso el array de estructuras de tipo ePais
/// @param tamP Le paso el tamanio del array paises
/// @return retorna 1 si se hizo correctamente
int MostrarListaLibros(eLibro libros[], int tamL, eAutor autores[], int tamA, eEditorial editoriales[], int tamE,ePais paises[],int tamP);

/// @param libros Le paso el array de estructuras de tipo eLibro
/// @param tamL Le paso el tamanio del array libros
/// @param id Le paso el id que el usuario cargo para buscar el libro con ese mismo id
/// @return retorna la posicion del libro
int BuscarLibro(eLibro libros[], int tamL, int id);

/// @param libros Le paso el array de estructuras de tipo eLibro
/// @param tamL Le paso el tamanio del array libros
/// @param promedio Le paso la variable promedio puntero para que almacene el promedio calculado y pasarlo por referencia
/// @return retorna 1 si se hizo correctamente
float CalcularTotalYPromedio(eLibro libros[], int tamL, float* promedio);

/// @param libros Le paso el array de estructuras de tipo eLibro
/// @param tamL Le paso el tamanio del array libros
/// @param promedio
/// @return
int SuperanPromedio(eLibro libros[], int tamL, float promedio);

/// @param libros Le paso el array de estructuras de tipo eLibro
/// @param tamL Le paso el tamanio del array libros
/// @return
int CantidadAnteriorFecha(eLibro libros[], int tamL);

/// @param libros Le paso el array de estructuras de tipo eLibro
/// @param tamL Le paso el tamanio del array libros
/// @param autores Le paso el array de estructuras de tipo eAutor
/// @param tamA
/// @param editoriales
/// @param tamE
/// @param paises
/// @param tamP
/// @return
int OrdenarPorImporteYTitulo(eLibro libros[], int tamL, eAutor autores[], int tamA, eEditorial editoriales[], int tamE, ePais paises[], int tamP);


#endif /* FUNCIONES_H_ */
