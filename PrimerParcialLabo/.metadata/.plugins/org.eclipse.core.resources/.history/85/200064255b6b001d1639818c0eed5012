#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "LinkedList.h"
#include "Controller.h"
#include "input.h"
#include "Libro.h"
#include "menu.h"

int main()
{
	setbuf(stdout,NULL);

    int option;
    char respuesta;
//    int informes;
//    int flagBinario = 0;
    int flagGuardar = 0;
    char guardar;
    char nombreArchivo[100];
    char extension[10];



    LinkedList* listaLibros = ll_newLinkedList();



    do{
    option = menuOpciones();
        switch(option)
        {
            case 1:
            	printf("\nUsted eligio: CARGA DE ARCHIVOS\n");
            	utn_getChar(nombreArchivo,"Ingrese el nombre del archivo: ","\nError. Ingrese solo letras: ");
            	printf("\n nombre de archivo: %s",nombreArchivo);
            	if(controller_cargarLibrosDesdeTexto(nombreArchivo,listaLibros) == 1){
            		printf("\nARCHIVO DE LIBROS CARGADO CORRECTAMENTE\n");
            	}else{
            		printf("\nERROR, NO SE PUDO CARGAR EL ARCHIVO DE LIBROS\n");
            	}
                break;
            case 2:
            	printf("\nUsted eligio: IMPRIMIR DATOS\n");
            	if((ll_isEmpty(listaLibros) == 0)){
            		controller_listarLibros(listaLibros);
            	}
            	break;
            case 3:
            	printf("\nUsted eligio: ORDENAR Y LISTAR\n");
            	controller_ordenarLibros(listaLibros);
//            	if((ll_isEmpty(listaLibros) == 0))
//            	{
//
//            	if(controller_ordenarLibros(listaLibros) != 1){
//            		printf("\nError. No se pueden ordenar y listar los jugadores.\n");
//            	}
//
//            	else{
//            		printf("\nError. Se deben cargar los archivos de jugadores y selecciones o dar de alta un jugador para ordenar y listar\n");
//            	}
//            	}

            	break;
            case 4:
            	printf("\nUsted eligio: GENERAR ARCHIVO BINARIO\n");
//            	if((ll_isEmpty(listaLibros) == 0)){
////            	if(controller_generarJugadoresModoBinario("JugadoresBinarios.dat",listaJugadores,listaSelecciones) == 0){
////            		printf("\nArchivo binario generado correctamente. \n");
////            	}else{
////            		printf("\nError. El archivo binario no se pudo generar correctamente. \n");
////            	}
//            	flagBinario =1;
//            	}else{
//            		printf("\nNo se puede generar el archivo binario sin antes cargar los archivos de jugadores y selecciones.\n");
//            	}
//                break;

                break;
            case 5:
            	printf("\nUsted eligio: GUARDAR ARCHIVOS .CSV\n");
//            	if((ll_isEmpty(listaLibros) == 0))
//            	{
//            		if(controller_guardarLibrosModoTexto("jugadores.csv" ,listaLibros) == 1)
//            		{
//            			printf("\nDATOS DE JUGADORES GUARDADOS CORRECTAMENTE\n");
//            			flagGuardar = 1;
//            		}
//            	}
//            	else
//            	{
//            		printf("\nNo se pueden guardar los archivos .CSV sin antes cargar los archivos.\n");
//            	}
                break;
            case 7:
            	printf("\nUsted eligio: SALIR\n");
            	if(flagGuardar == 1){
            	respuesta = getChar("\nEsta seguro de que quiere cerrar el programa? s/n: ");
            		if(respuesta == 's'||respuesta == 's')
            		{
            		printf("\nAdios!!");
            		option = 8;
            		}
            	}else{
            		guardar = getChar("\nATENCION! No se guardaron los cambios en los archivos. Desea salir igualmente? s/n: ");
            		if(guardar == 's' || guardar == 'S'){
            			option = 8;
            		}
            	}
                break;
        }
    }while(option != 8);

    return 0;
}

